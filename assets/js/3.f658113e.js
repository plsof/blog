(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{397:function(s,t,a){s.exports=a.p+"assets/img/userspace-proxy.7dfebdc9.svg"},398:function(s,t,a){s.exports=a.p+"assets/img/iptables-proxy.fc39e9e4.svg"},399:function(s,t,a){s.exports=a.p+"assets/img/ipvs-proxy.88a8453f.svg"},432:function(s,t,a){"use strict";a.r(t);var e=a(54),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"service"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#service"}},[s._v("#")]),s._v(" Service")]),s._v(" "),e("p",[s._v("将运行在一组Pod上的应用程序公开为网络服务的抽象方法")]),s._v(" "),e("h3",{attrs:{id:"定义service"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#定义service"}},[s._v("#")]),s._v(" 定义Service")]),s._v(" "),e("p",[s._v("Service在k8s中是REST对象，与Pod一样。你可以通过POST请求API server来创建新的service实例")]),s._v(" "),e("p",[s._v("例子：定义一个名为"),e("code",[s._v("my-service")]),s._v("的service关联"),e("code",[s._v("MyApp")]),s._v("这个Pod")]),s._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Service\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" myhttp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("v2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("service\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("selector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" myhttp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("v2\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" NodePort\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("protocol")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" TCP\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("8800")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("targetPort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("nodePort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("30080")]),s._v("\n")])])]),e("p",[s._v("创建服务")]),s._v(" "),e("p",[e("code",[s._v("kubectl create -f ./myhttp-v2-service.yaml")])]),s._v(" "),e("p",[e("code",[s._v("svc.spec.type")])]),s._v(" "),e("p",[s._v("默认type为ClusterIP")]),s._v(" "),e("p",[e("code",[s._v("svc.spec.ports.nodePort")])]),s._v(" "),e("p",[s._v("端口范围30000-32767 不指定为范围内随机值")]),s._v(" "),e("p",[e("code",[s._v("svc.spec.sessionAffinity")])]),s._v(" "),e("p",[s._v("session会话保持")]),s._v(" "),e("p",[e("code",[s._v('kubectl patch svc getip-service -p \'{"spec":{"sessionAffinity":"ClientIP"}}\'')])]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("➜  ~ "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://172.188.2.71:30080/info"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Code"')]),s._v(":0,"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Msg"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"success"')]),s._v(","),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"IpInfo"')]),s._v(":"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Ip"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10.244.2.3"')]),s._v(","),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Mac"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"52:91:74:8a:ee:96"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Code"')]),s._v(":0,"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Msg"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"success"')]),s._v(","),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"IpInfo"')]),s._v(":"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Ip"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10.244.2.3"')]),s._v(","),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Mac"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"52:91:74:8a:ee:96"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Code"')]),s._v(":0,"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Msg"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"success"')]),s._v(","),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"IpInfo"')]),s._v(":"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Ip"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10.244.2.3"')]),s._v(","),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Mac"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"52:91:74:8a:ee:96"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Code"')]),s._v(":0,"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Msg"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"success"')]),s._v(","),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"IpInfo"')]),s._v(":"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Ip"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10.244.2.3"')]),s._v(","),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Mac"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"52:91:74:8a:ee:96"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Code"')]),s._v(":0,"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Msg"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"success"')]),s._v(","),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"IpInfo"')]),s._v(":"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Ip"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10.244.2.3"')]),s._v(","),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Mac"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"52:91:74:8a:ee:96"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Code"')]),s._v(":0,"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Msg"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"success"')]),s._v(","),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"IpInfo"')]),s._v(":"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Ip"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10.244.2.3"')]),s._v(","),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Mac"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"52:91:74:8a:ee:96"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),e("h4",{attrs:{id:"没有selector的service"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#没有selector的service"}},[s._v("#")]),s._v(" 没有selector的service")]),s._v(" "),e("p",[s._v("Services主要用来抽象访问Pod，但它们也可以用来访问其它类型的backends")]),s._v(" "),e("ul",[e("li",[s._v("外部的数据库集群")]),s._v(" "),e("li",[s._v("Service指向另一个Namespace或其它集群的Service")]),s._v(" "),e("li",[s._v("您正在将workload迁移到k8s。在评估该方法时，您仅在k8s中运行一部分后端。")])]),s._v(" "),e("p",[s._v("example:（创建一个连接集群外的服务）")]),s._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Service\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" external"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("service\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("protocol")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" TCP\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3307")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("targetPort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3307")]),s._v("\n")])])]),e("p",[s._v("因为这个服务没有"),e("code",[s._v("selector")]),s._v("，你需要手动指定到Endpoint的映射关系")]),s._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Endpoints\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" external"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("service\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("subsets")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("addresses")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ip")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 172.188.2.89\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3307")]),s._v("\n")])])]),e("p",[e("strong",[s._v("注意：endpoint IP地址不可以是loopback，link-local或者其它k8s集群的Services，因为kube-proxy不支持虚拟地址")])]),s._v(" "),e("h3",{attrs:{id:"虚拟ip和service代理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#虚拟ip和service代理"}},[s._v("#")]),s._v(" 虚拟IP和service代理")]),s._v(" "),e("p",[s._v("在k8s集群中，每个Node运行一个"),e("code",[s._v("kube-proxy")]),s._v("进程。"),e("code",[s._v("kube-proxy")]),s._v("负责为"),e("code",[s._v("Services")]),s._v("实现了一种VIP（虚拟IP）的形式，而不是ExternalName的形式。")]),s._v(" "),e("h4",{attrs:{id:"userspace代理模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#userspace代理模式"}},[s._v("#")]),s._v(" userspace代理模式")]),s._v(" "),e("p",[s._v("客户端访问service-ip（clusterIP）请求会先从用户态切换到内核的iptables，然后回到用户态kube-proxy，kube-proxy负责代理转发工作。每个service都会由kube-proxy在node节点上起一个随机的代理端口，iptables会捕获clusterIP上的端口（targetPort）流量重定向到代理端口，任何访问代理端口的流量都会被代理到service后端的一个Pod上，默认情况下，对后端Pod的选择是轮询的。userspace模式，所有的转发都是通过 kube-proxy 软件来实现\n"),e("img",{staticStyle:{zoom:"40%"},attrs:{src:a(397),alt:"userspace-proxy"}})]),s._v(" "),e("h4",{attrs:{id:"iptables代理模式-默认模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#iptables代理模式-默认模式"}},[s._v("#")]),s._v(" iptables代理模式（默认模式）")]),s._v(" "),e("p",[s._v("客户端访问service-ip (clusterIP) 请求会由iptables直接重定向到后端对应的Pod上，每个service都会由kube-proxy生成对应iptables规则，iptables会捕获clusterIP上的端口（targetPort）流量重定向到后端的一个Pod上，默认情况下，对后端Pod的选择是随机的，也可以设置会话保持。iptables模式，所有的转发都是通过iptables内核模块来实现的，而kube-proxy只负责生成相应的iptables规则。\n"),e("img",{staticStyle:{zoom:"40%"},attrs:{src:a(398),alt:"iptables-proxy"}})]),s._v(" "),e("h4",{attrs:{id:"ipvs代理模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ipvs代理模式"}},[s._v("#")]),s._v(" IPVS代理模式")]),s._v(" "),e("p",[s._v("从k8s 1.8版本之后，新增kube-proxy对ipvs的支持，并且在新版本的k8s 1.11版本中被纳入GA。之所以会有ipvs这种模式，是因为iptables添加规则是不增量的，先把当前的iptables规则都拷贝出现，再做修改，然后再把修改后的iptables规则保存回去，这样一个过程的结果就是，iptables在更新一条规则时，会把iptables锁住，这样的结果在服务数量达到一定量级时，性能基本上是不可接受的。")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://www.codercto.com/a/20391.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("IPVS详细介绍"),e("OutboundLink")],1),s._v(" "),e("img",{staticStyle:{zoom:"40%"},attrs:{src:a(399),alt:"ipvs-proxy"}})]),s._v(" "),e("h3",{attrs:{id:"多端口services"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多端口services"}},[s._v("#")]),s._v(" 多端口Services")]),s._v(" "),e("p",[s._v("对于某些需要公开多个端口的服务，k8s允许在Service对象上配置多个端口定义。为服务使用多个端口时，必须提供所有端口名称，以使它们无歧义。例如：")]),s._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Service\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" my"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("service\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("selector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" MyApp\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" http\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("protocol")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" TCP\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("targetPort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("9376")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" https\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("protocol")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" TCP\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("443")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("targetPort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("9377")]),s._v("\n")])])]),e("h3",{attrs:{id:"服务发现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#服务发现"}},[s._v("#")]),s._v(" 服务发现")]),s._v(" "),e("p",[s._v("k8s支持2种服务发现，环境变量和DNS")]),s._v(" "),e("h4",{attrs:{id:"环境变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#环境变量"}},[s._v("#")]),s._v(" 环境变量")]),s._v(" "),e("p",[s._v("当Pod运行在Node上，kubelet会为每个活跃的Service添加一组环境变量。它同时支持Docker links兼容变量（查看 makeLinkVariables）、简单的{SVCNAME}_SERVICE_HOST和{SVCNAME}_SERVICE_PORT变量，这里Service的名称需大写，横线被转换成下划线。")]),s._v(" "),e("h4",{attrs:{id:"dns"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dns"}},[s._v("#")]),s._v(" DNS")]),s._v(" "),e("p",[s._v("使用附加组件为Kubernetes集群设置DNS服务。支持群集的DNS服务器（例如CoreDNS）监视Kubernetes API中的新服务，并为每个服务创建一组DNS记录。如果在整个群集中都启用了DNS，则所有Pod都应该能够通过其DNS名称自动解析服务。")]),s._v(" "),e("h3",{attrs:{id:"headless-services"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#headless-services"}},[s._v("#")]),s._v(" Headless Services")]),s._v(" "),e("p",[s._v('有时不需要或不想要负载均衡，以及单独的Service IP。遇到这种情况，可以通过指定Cluster IP（spec.clusterIP）的值为"None"来创建Headless Service。')]),s._v(" "),e("p",[e("code",[s._v("getip-service-headless.yml")])]),s._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Service\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" getip"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("service"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("headless\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("selector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" getip\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("clusterIP")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" None\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("protocol")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" TCP\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("7070")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("targetPort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("7080")]),s._v("\n")])])]),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master deployment"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl get pods -o wide -l app=getip")]),s._v("\nNAME                               READY   STATUS    RESTARTS   AGE   IP           NODE    NOMINATED NODE   READINESS GATES\ngetip-deployment-c6b88c56b-pks5t   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          18h   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),s._v(".1.3   node1   "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("           "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\ngetip-deployment-c6b88c56b-s5k45   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          18h   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),s._v(".2.3   node2   "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("           "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master deployment"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# dig +short -t A getip-service-headless.default.svc.cluster.local. @10.244.0.3")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),s._v(".1.3\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),s._v(".2.3\n")])])]),e("h3",{attrs:{id:"发布服务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#发布服务"}},[s._v("#")]),s._v(" 发布服务")]),s._v(" "),e("p",[s._v("对一些应用（如Frontend）的某些部分，可能希望通过外部k8s集群外部IP地址暴露Service。")]),s._v(" "),e("p",[s._v("k8s"),e("code",[s._v("ServiceTypes")]),s._v("允许指定一个需要的类型的Service，默认是"),e("code",[s._v("ClusterIP")]),s._v("类型。")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("ClusterIP")]),s._v(": 通过集群的内部IP暴露服务，服务只能够在集群内部可以访问。")]),s._v(" "),e("li",[e("code",[s._v("NodePort")]),s._v(": 通过每个Node上的IP和静态端口（NodePort）暴露服务。NodePort服务会路由到ClusterIP服务，这个ClusterIP服务会自动创建。通过请求NodeIP:NodePort，可以从集群的外部访问一个NodePort服务。")]),s._v(" "),e("li",[e("code",[s._v("LoadBalancer")]),s._v(": 使用云提供商的负载局衡器，可以向外部暴露服务。")]),s._v(" "),e("li",[e("code",[s._v("ExternalName")]),s._v(": 通过返回CNAME和它的值，可以将服务映射到externalName字段的内容（例如，foo.bar.example.com）。没有任何类型代理被创建。")])]),s._v(" "),e("h2",{attrs:{id:"ingress"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ingress"}},[s._v("#")]),s._v(" Ingress")]),s._v(" "),e("h3",{attrs:{id:"概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[s._v("#")]),s._v(" 概述")]),s._v(" "),e("p",[s._v("Ingress暴露了HTTP和HTTPS从集群外部到集群内部服务的路由，流量路由由Ingress资源中定义的规则决定")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("   internet\n      |\n  [ Ingress ]\n  --|-----|--\n  [ Services ]\n")])])]),e("h3",{attrs:{id:"ingress、ingress-controller"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ingress、ingress-controller"}},[s._v("#")]),s._v(" Ingress、Ingress Controller")]),s._v(" "),e("ul",[e("li",[s._v("ingress")])]),s._v(" "),e("p",[s._v("k8s中的一个api对象资源，定义请求如何转发到service的规则，可以理解为配置模版")]),s._v(" "),e("ul",[e("li",[s._v("ingress-controller")])]),s._v(" "),e("p",[s._v("具体实现反向代理和负载均衡的Pod，对ingress定义的规则进行解析，根据配置的规则来实现请求转发")]),s._v(" "),e("h3",{attrs:{id:"部署模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#部署模式"}},[s._v("#")]),s._v(" 部署模式")]),s._v(" "),e("ol",[e("li",[s._v("Deployment + LoadBalancer模式的Service")])]),s._v(" "),e("p",[s._v("如果要把ingress部署在公有云，那用这种方式比较合适。用Deployment部署ingress-controller，创建一个type为       LoadBalancer的service关联这组pod。大部分公有云，都会为LoadBalancer的service自动创建一个负载均衡器，通常还绑定了公网地址。只要把域名解析指向该地址，就实现了集群服务的对外暴露。")]),s._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[s._v("Deployment + NodePort模式的Service")])]),s._v(" "),e("p",[s._v("同样用deployment模式部署ingress-controller，并创建对应的服务，但是type为NodePort。这样ingress就会暴露在集群节 点ip的特定端口上。由于nodeport暴露的端口是随机端口，一般会在前面再搭建一套负载均衡器来转发请求。该方式一般用于宿主机是相对固定的环境ip地址不变的场景。NodePort方式暴露ingress虽然简单方便，但是NodePort多了一层NAT，在请求量级很大时可能对性能会有一定影响。")]),s._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[s._v("DaemonSet + HostNetwork + nodeSelector")])]),s._v(" "),e("p",[s._v("用DaemonSet结合nodeselector来部署ingress-controller到特定的node上，然后使用HostNetwork直接把该pod与宿主机node的网络打通，直接使用宿主机的80/433端口就能访问服务。这时ingress-controller所在的node机器就很类似传统架构的边缘节点，比如机房入口的nginx服务器。该方式整个请求链路最简单，性能相对NodePort模式更好。缺点是由于直接利用宿主机节点的网络和端口，一个node只能部署一个ingress-controller pod。比较适合大并发的生产环境使用。")]),s._v(" "),e("h3",{attrs:{id:"ingress-nginx"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ingress-nginx"}},[s._v("#")]),s._v(" ingress-nginx")]),s._v(" "),e("p",[s._v("版本："),e("code",[s._v("0.28.0")])]),s._v(" "),e("h4",{attrs:{id:"部署模式2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#部署模式2"}},[s._v("#")]),s._v(" 部署模式2")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# wget https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/static/mandatory.yaml")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# wget https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/static/provider/baremetal/service-nodeport.yaml")]),s._v("\n")])])]),e("p",[s._v("创建ingress-controller, ingress-service")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl apply -f mandatory.yaml")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl apply -f service-nodeport.yaml")]),s._v("\n")])])]),e("p",[s._v("创建ingress资源")]),s._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" extensions/v1beta1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Ingress\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ingress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("http\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("annotations")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kubernetes.io/ingress.class")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nginx"')]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开启use-regex，启用path的正则匹配")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("nginx.ingress.kubernetes.io/use-regex")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"true"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("rules")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义域名")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("host")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" www.tabops.com\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("http")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("paths")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("path")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" /\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("backend")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n              "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("serviceName")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" getip"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("service\n              "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("servicePort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("host")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" www.pdd.com\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("http")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("paths")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("path")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" /\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("backend")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n              "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("serviceName")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" myhttp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("service\n              "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("servicePort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n")])])]),e("p",[s._v("查看状态")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master ingress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl get pods -o wide -n ingress-nginx")]),s._v("\nNAME                                        READY   STATUS    RESTARTS   AGE   IP           NODE    NOMINATED NODE   READINESS GATES\nnginx-ingress-controller-657dfc89f9-qkk2b   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          11m   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),s._v(".2.8   node2   "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("           "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nnginx-ingress-controller-657dfc89f9-z9prz   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          11m   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),s._v(".1.8   node1   "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("           "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master ingress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl get svc -o wide -n ingress-nginx")]),s._v("\nNAME            TYPE       CLUSTER-IP      EXTERNAL-IP   PORT"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("S"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("                      AGE     SELECTOR\ningress-nginx   NodePort   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.108")]),s._v(".202.19   "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("        "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v(":30670/TCP,443:32229/TCP   7m41s   app.kubernetes.io/name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ingress-nginx,app.kubernetes.io/part-of"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ingress-nginx\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master ingress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl get ingress -o wide")]),s._v("\nNAME           HOSTS                        ADDRESS         PORTS   AGE\ningress-http   www.tabops.com,www.pdd.com   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.108")]),s._v(".202.19   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("      8m59s\n")])])]),e("h4",{attrs:{id:"部署模式3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#部署模式3"}},[s._v("#")]),s._v(" 部署模式3")]),s._v(" "),e("p",[s._v("DaemonSet部署在特定节点"),e("code",[s._v("node1")])]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master ingress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# kubectl label node node1 isIngress="true"')]),s._v("\n")])])]),e("p",[s._v("修改mandatory.yaml文件配置项")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("Deployment -> DaemonSet")])]),s._v(" "),e("li",[e("p",[s._v("删除Replicas")])]),s._v(" "),e("li",[e("p",[s._v("选择对应node的标签")])]),s._v(" "),e("li",[e("p",[s._v("启用hostNetwork")])])]),s._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" DaemonSet\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# replicas: 1")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("nodeSelector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubernetes.io/os: linux")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("isIngress")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"true"')]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("hostNetwork")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[s._v("true")]),s._v("\n")])])]),e("p",[s._v("创建ingress-controller")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl apply -f mandatory.yaml")]),s._v("\n")])])]),e("p",[s._v("创建ingress资源")]),s._v(" "),e("p",[s._v("同上")]),s._v(" "),e("p",[s._v("查看状态")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master ingress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl get pods -o wide -n ingress-nginx")]),s._v("\nNAME                             READY   STATUS    RESTARTS   AGE     IP             NODE    NOMINATED NODE   READINESS GATES\nnginx-ingress-controller-52qtj   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          3h31m   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.188")]),s._v(".2.86   node1   "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("           "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master ingress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl get ingress -o wide")]),s._v("\nNAME           HOSTS                        ADDRESS          PORTS   AGE\ningress-http   www.tabops.com,www.pdd.com                    "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("      20m\n")])])]),e("h3",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[s._v("#")]),s._v(" 参考")]),s._v(" "),e("p",[e("code",[s._v("https://www.cnblogs.com/linuxk/p/9706720.html")])]),s._v(" "),e("p",[e("code",[s._v("https://www.cnblogs.com/Presley-lpc/p/10923432.html")])]),s._v(" "),e("p",[e("code",[s._v("https://segmentfault.com/a/1190000019908991")])])])}),[],!1,null,null,null);t.default=n.exports}}]);