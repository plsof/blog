(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{395:function(t,a,s){t.exports=s.p+"assets/img/pod.9ec82ebf.png"},396:function(t,a,s){t.exports=s.p+"assets/img/podLife.28e94648.jpg"},430:function(t,a,s){"use strict";s.r(a);var e=s(54),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"pods"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pods"}},[t._v("#")]),t._v(" Pods")]),t._v(" "),e("h3",{attrs:{id:"概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),e("p",[e("code",[t._v("Pod")]),t._v("是"),e("code",[t._v("Kubernetes")]),t._v("中最基本的调度单元")]),t._v(" "),e("p",[e("strong",[t._v("Pod示意图")])]),t._v(" "),e("img",{attrs:{src:s(395),alt:"Pod"}}),t._v(" "),e("p",[e("code",[t._v("Pod")]),t._v("在"),e("code",[t._v("Kubernetes")]),t._v("中有两种使用方式")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Pods that run a single container:")]),t._v(" "),e("p",[e("code",[t._v("Pod")]),t._v("中只运行一个容器")])]),t._v(" "),e("li",[e("p",[t._v("Pods that run multiple containers that need to work together:")]),t._v(" "),e("p",[e("code",[t._v("Pod")]),t._v("中运行多个容器，容器间共享资源")])])]),t._v(" "),e("h4",{attrs:{id:"网络"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#网络"}},[t._v("#")]),t._v(" 网络")]),t._v(" "),e("p",[t._v("每个"),e("code",[t._v("Pod")]),t._v("有一个特有的IP地址，"),e("code",[t._v("Pod")]),t._v("中的各"),e("code",[t._v("Container")]),t._v("共享网络资源，"),e("code",[t._v("Container")]),t._v("之间通过localhost进行通信")]),t._v(" "),e("h4",{attrs:{id:"存储"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#存储"}},[t._v("#")]),t._v(" 存储")]),t._v(" "),e("p",[e("code",[t._v("Pod")]),t._v("可以指定一个Volumes作为共享存储，"),e("code",[t._v("Pod")]),t._v("的"),e("code",[t._v("Containers")]),t._v("共享这个Volume")]),t._v(" "),e("h3",{attrs:{id:"模版"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#模版"}},[t._v("#")]),t._v(" 模版")]),t._v(" "),e("p",[t._v("Pod模版是Pod的规格说明，控制器使用Pod模版创建实际的Pod")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[t._v("apiVersion"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" v1\nkind"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Pod\nmetadata"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" myapp-pod\n  labels"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    app"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" myapp\nspec"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  containers"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  - name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" myapp-container\n    image"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" busybox\n    command"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("'sh'"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" '-c'"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 'echo Hello Kubernetes! && sleep "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3600")]),t._v("'"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("h3",{attrs:{id:"pause容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pause容器"}},[t._v("#")]),t._v(" pause容器")]),t._v(" "),e("p",[t._v("pause容器，又叫Infra容器")]),t._v(" "),e("p",[e("code",[t._v("kubernetes")]),t._v("中的"),e("code",[t._v("pause")]),t._v("容器主要为每个业务容器提供以下功能：")]),t._v(" "),e("ul",[e("li",[t._v("在pod中担任Linux命名空间共享的基础")]),t._v(" "),e("li",[t._v("启用pid命名空间，开启init进程（只有Kubernetes1.7默认开启。1.8默认禁止，还是每个容器自己捕获僵尸进程）")])]),t._v(" "),e("h3",{attrs:{id:"生命周期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[t._v("#")]),t._v(" 生命周期")]),t._v(" "),e("p",[e("strong",[t._v("生命周期示意图")])]),t._v(" "),e("img",{staticStyle:{zoom:"50%"},attrs:{src:s(396),alt:"PodLife"}}),t._v(" "),e("h4",{attrs:{id:"状态"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#状态"}},[t._v("#")]),t._v(" 状态")]),t._v(" "),e("p",[e("code",[t._v("Pod")]),t._v("的状态定义在"),e("code",[t._v("PodStatus")]),t._v("对象中，其中有一个"),e("code",[t._v("phase")]),t._v("字段，查看"),e("code",[t._v("Pod")]),t._v("的状态值"),e("code",[t._v("kubectl explain pod.status")])]),t._v(" "),e("p",[t._v("下面是"),e("code",[t._v("phase")]),t._v("可能的值：")]),t._v(" "),e("ul",[e("li",[t._v("Pending（挂起）："),e("code",[t._v("Pod")]),t._v("已被"),e("code",[t._v("Kubernetes")]),t._v("系统接受，但有一个或者多个容器镜像尚未创建。等待时间包括调度Pod的时间和通过网络下载镜像的时间，这可能需要花点时间。")]),t._v(" "),e("li",[t._v("Running（运行中）：该"),e("code",[t._v("Pod")]),t._v("已经绑定到了一个节点上，"),e("code",[t._v("Pod")]),t._v("中所有的容器都已被创建。至少有一个容器正在运行，或者正处于启动或重启状态。")]),t._v(" "),e("li",[t._v("Succeeded（成功）："),e("code",[t._v("Pod")]),t._v("中的所有容器都被成功终止，并且不会再重启。")]),t._v(" "),e("li",[t._v("Failed（失败）："),e("code",[t._v("Pod")]),t._v("中的所有容器都已终止了，并且至少有一个容器是因为失败终止。也就是说，容器以非0状态退出或者被系统终止。")]),t._v(" "),e("li",[t._v("Unknown（未知）：因为某些原因无法取得"),e("code",[t._v("Pod")]),t._v("的状态，通常是因为与"),e("code",[t._v("Pod")]),t._v("所在主机通信失败。")])]),t._v(" "),e("p",[t._v("除此之外，"),e("code",[t._v("PodStatus")]),t._v("对象中还包含一个"),e("code",[t._v("PodCondition")]),t._v("数组。 "),e("code",[t._v("PodCondition")]),t._v("数组的每个元素都有一个type字段和一个status字段。type字段是字符串，可能的值有PodScheduled、Ready、Initialized、Unschedulable、ContainersReady。status字段是一个字符串，可能的值有 True、False、Unknown。")]),t._v(" "),e("h4",{attrs:{id:"重启策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重启策略"}},[t._v("#")]),t._v(" 重启策略")]),t._v(" "),e("p",[e("code",[t._v("restartPolicy")]),t._v("字段设置"),e("code",[t._v("Pod")]),t._v("中所有容器的重启策略")]),t._v(" "),e("ul",[e("li",[t._v("Always (默认)")]),t._v(" "),e("li",[t._v("OnFailure")]),t._v(" "),e("li",[t._v("Never")])]),t._v(" "),e("h4",{attrs:{id:"初始化容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#初始化容器"}},[t._v("#")]),t._v(" 初始化容器")]),t._v(" "),e("p",[e("code",[t._v("Init Container")]),t._v("就是用来做初始化工作的容器，可以是一个或者多个，如果有多个的话，这些容器会按定义的顺序依次执行。从上面的"),e("code",[t._v("Pod")]),t._v("生命周期图中可以看出初始化容器是独立于主容器之外的，只有所有的初始化容器执行完之后，主容器才会被启动。")]),t._v(" "),e("p",[e("code",[t._v("init-demo.yaml")])]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" init"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("demo\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" workdir\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("emptyDir")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("initContainers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" install\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" busybox\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/sh"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("args")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"echo hello pdd > /tmp/index.html"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" workdir\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/tmp"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" workdir\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /usr/share/nginx/html\n")])])]),e("h4",{attrs:{id:"容器钩子"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#容器钩子"}},[t._v("#")]),t._v(" 容器钩子")]),t._v(" "),e("p",[e("code",[t._v("Kubernetes")]),t._v("为容器提供了生命周期的钩子，也就是"),e("code",[t._v("Pod Hook")]),t._v("，"),e("code",[t._v("Pod Hook")]),t._v("是由"),e("code",[t._v("Kubelet")]),t._v("发起的，在容器中的进程启动前或者容器中的进程终止之前运行，包含在容器的生命周期之中。我们可以同时为"),e("code",[t._v("Pod")]),t._v("中的所有容器都配置"),e("code",[t._v("Hook")]),t._v("。")]),t._v(" "),e("p",[t._v("钩子函数：")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("PostStart")]),t._v(": 这个钩子在容器创建后立即执行。但是并不能保证钩子将在容器"),e("code",[t._v("ENTRYPOINT")]),t._v("之前运行，因为没有参数传递给处理程序。主要用于资源部署、环境准备等。不过需要注意的是如果钩子花费太长时间以至于不能运行或者挂起，容器将不能达到"),e("code",[t._v("running")]),t._v("状态。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("PreStop")]),t._v(": 这个钩子在容器终止之前立即被调用。它是阻塞的，意味着它是同步的，所以它必须在删除容器的调用发出之前完成。主要用于优雅关闭应用程序、通知其他系统等。如果钩子在执行期间挂起，"),e("code",[t._v("Pod")]),t._v("阶段将停留在"),e("code",[t._v("running")]),t._v("状态并且永不会达到"),e("code",[t._v("failed")]),t._v("状态。")])])]),t._v(" "),e("p",[t._v("如果"),e("code",[t._v("PostStart")]),t._v("或者"),e("code",[t._v("PreStop")]),t._v("钩子失败，它会杀死容器。所以我们应该让钩子函数尽可能的轻量。当然有些情况下，长时间运行命令是合理的，比如在停止容器之前预先保存状态。")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("EXEC")]),t._v(": 用于执行一段特定的命令，不过要注意的是该命令消耗的资源会被计入容器。")]),t._v(" "),e("li",[e("code",[t._v("HTTP")]),t._v(": 对容器上的特定的端点执行 HTTP 请求。")])]),t._v(" "),e("p",[e("code",[t._v("pod-poststart.yaml")])]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hook"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("demo1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hook"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("demo1\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("lifecycle")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("postStart")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/sh"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"echo Hello from the postStart handler > /usr/share/nginx/html/index.html"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("p",[e("code",[t._v("pod-prestop.yaml")])]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hook"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("demo2\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" message\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostPath")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /tmp\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hook"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("demo2\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" message\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /usr/share/\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("lifecycle")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("preStop")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/bin/sh'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-c'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'echo Hello from the preStop Handler > /usr/share/message'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("h4",{attrs:{id:"监控检查"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#监控检查"}},[t._v("#")]),t._v(" 监控检查")]),t._v(" "),e("p",[e("code",[t._v("kubelet")]),t._v("可以选择性在运行的容器上执行以下三种探针：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("livenessProbe")]),t._v("：指示容器是否正在运行。如果存活探测失败，则"),e("code",[t._v("kubelet")]),t._v("会杀死容器，并且容器将受到其重启策略的影响。如果容器不提供存活探针，则默认状态为"),e("code",[t._v("Success")]),t._v("。")]),t._v(" "),e("li",[e("code",[t._v("readinessProbe")]),t._v("：指示容器是否准备好服务请求。如果就绪探测失败，端点控制器将从与"),e("code",[t._v("Pod")]),t._v("匹配的所有"),e("code",[t._v("Service")]),t._v("的端点中删除该"),e("code",[t._v("Pod")]),t._v("的IP地址。初始延迟之前的就绪状态默认为"),e("code",[t._v("Failure")]),t._v("。如果容器不提供就绪探针，则默认状态为"),e("code",[t._v("Success")]),t._v("。")]),t._v(" "),e("li",[e("code",[t._v("startupProbe")]),t._v("：指示容器中的应用程序是否启动，在"),e("code",[t._v("startupProbe")]),t._v("探针执行成功之前，其它的探针都会失效。如果存活探测失败，则"),e("code",[t._v("kubelet")]),t._v("会杀死容器，并且容器将受到其重启策略的影响。如果容器不提供存活探针，则默认状态为"),e("code",[t._v("Success")]),t._v("。")])]),t._v(" "),e("p",[t._v("探针支持下面几种配置方式:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("ExecAction")]),t._v("：在容器内执行指定命令。如果命令退出时返回码为0则认为诊断成功。")]),t._v(" "),e("li",[e("code",[t._v("TCPSocketAction")]),t._v("：对指定容器（IP:Port）进行TCP检查。如果端口打开，则诊断被认为是成功的。")]),t._v(" "),e("li",[e("code",[t._v("HTTPGetAction")]),t._v("：对指定容器（http://ip:port/path）执行HTTP Get请求。如果响应的状态码大于等于200且小于400，则诊断被认为是成功的。")])]),t._v(" "),e("p",[t._v("每次探测都将获得以下三种结果之一：")]),t._v(" "),e("ul",[e("li",[t._v("成功：容器通过了诊断。")]),t._v(" "),e("li",[t._v("失败：容器未通过诊断。")]),t._v(" "),e("li",[t._v("未知：诊断失败，因此不会采取任何行动。")])]),t._v(" "),e("h3",{attrs:{id:"资源限制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#资源限制"}},[t._v("#")]),t._v(" 资源限制")]),t._v(" "),e("p",[t._v("默认情况下，"),e("code",[t._v("Pod")]),t._v("运行没有CPU和内存等的限额。这意味着系统中的任何"),e("code",[t._v("Pod")]),t._v("将能够像执行该"),e("code",[t._v("Pod")]),t._v("所在的节点一样，消耗足够多的CPU和内存等资源。")]),t._v(" "),e("p",[e("code",[t._v("kubectl explain pod.spec.containers.resources")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("limit")]),t._v(" Pod允许请求的最大计算资源。")]),t._v(" "),e("li",[e("code",[t._v("requests")]),t._v(" Pod运行需要的最小计算资源")])]),t._v(" "),e("h4",{attrs:{id:"cpu、内存资源限制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cpu、内存资源限制"}},[t._v("#")]),t._v(" CPU、内存资源限制")]),t._v(" "),e("p",[e("code",[t._v("Pod")]),t._v("内存超过limit时，会被oom，")]),t._v(" "),e("p",[e("code",[t._v("Pod")]),t._v("cpu超过limit时，不会被kill，但是会限制不超过limit值。")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" my"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nginx\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" my"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nginx\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("limits")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.5"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 500Mi\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.1"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100Mi\n")])])]),e("h2",{attrs:{id:"控制器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#控制器"}},[t._v("#")]),t._v(" 控制器")]),t._v(" "),e("h3",{attrs:{id:"replicaset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#replicaset"}},[t._v("#")]),t._v(" ReplicaSet")]),t._v(" "),e("p",[t._v("ReplicaSet在ReplicationController的基础上增加支持集合式selector")]),t._v(" "),e("h3",{attrs:{id:"deployments"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deployments"}},[t._v("#")]),t._v(" Deployments")]),t._v(" "),e("p",[t._v("Deployment控制器为Pods和ReplicaSets提供声明式的更新")]),t._v(" "),e("h4",{attrs:{id:"创建deployment"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建deployment"}},[t._v("#")]),t._v(" 创建Deployment")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("命令行创建")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kubectl run myhttp-deployment --image"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.188")]),t._v(".3.24:8000/library/myhttp:v1 --replicas"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("YAML方式创建")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apps/v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deployment\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" myhttp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("deployment\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" myhttp\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" myhttp\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" myhttp\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" myhttp\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 172.188.3.24"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("8000/library/myhttp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("v1\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n")])])]),e("p",[t._v("创建deployment\n"),e("code",[t._v("kubectl apply -f ./myhttp.yaml")])])])]),t._v(" "),e("p",[t._v("查看Deplyment状态")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl get deployments")]),t._v("\nNAME                   READY   UP-TO-DATE   AVAILABLE   AGE\nmyhttp-deployment      "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("/2     "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("            "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("           6h31m\nmyhttp-v2-deployment   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("/2     "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("            "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("           174m\n")])])]),e("p",[t._v("查看Deplyment描述")]),t._v(" "),e("p",[e("code",[t._v("kubectl describe pod myhttp-deployment-c6b88c56b-bzfpc")])]),t._v(" "),e("h4",{attrs:{id:"deployment更新"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deployment更新"}},[t._v("#")]),t._v(" Deployment更新")]),t._v(" "),e("ul",[e("li",[t._v("命令行更新"),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kubectl "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" image deployment/myhttp-deployment "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("myhttp")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.188")]),t._v(".3.24:8000/library/myhttp:v2 --record\n")])])]),t._v("返回输出"),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("deployment.apps/myhttp-deployment image updated\n")])])])]),t._v(" "),e("li",[t._v("编辑Deployment"),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kubectl edit deployment myhttp-deployment\n")])])]),t._v("返回输出"),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("deployment.apps/myhttp-deployment edited\n")])])])])]),t._v(" "),e("p",[t._v("查看Deplyment细节")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kubectl describe deployment myhttp\n")])])]),e("h4",{attrs:{id:"deployment回退"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deployment回退"}},[t._v("#")]),t._v(" Deployment回退")]),t._v(" "),e("p",[t._v("查看更新历史")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kubectl rollout "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("history")]),t._v(" deployment myhttp-deployment\n")])])]),e("p",[t._v("回退到指定版本")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kubectl rollout undo deployment myhttp-deployment --revision"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])])]),e("p",[e("strong",[t._v("未指定回退版本则默认回退到上一个版本")])]),t._v(" "),e("h4",{attrs:{id:"deployment伸缩"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deployment伸缩"}},[t._v("#")]),t._v(" Deployment伸缩")]),t._v(" "),e("ul",[e("li",[t._v("手动伸缩"),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kubectl scale deployment myhttp-deployment --replicas=4")]),t._v("\ndeployment.apps/myhttp-deployment scaled\n")])])])]),t._v(" "),e("li",[t._v("自动伸缩"),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("kubectl autoscale deployment myhttp-deployment --min"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" --max"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v(" --cpu-percent"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n")])])])])]),t._v(" "),e("h3",{attrs:{id:"statefulsets"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#statefulsets"}},[t._v("#")]),t._v(" StatefulSets")]),t._v(" "),e("p",[t._v("StatefulSet是为了解决有状态服务的问题（Deployments ReplicaSets无状态）")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("稳定的持久化存储，即Pod重新调度后还能访问到相同的持久化数据，基于PVC实现")])]),t._v(" "),e("li",[e("p",[t._v("稳定的网络标志，即Pod重新调度后其PodName和HostName不变，基于Headess\nService实现（没有Cluster IP的Service）")])]),t._v(" "),e("li",[e("p",[t._v("有序部署，有序扩展，即Pod是有顺序的，在部署或扩展的时候要依据定义的顺序依\n进行（从0到N-1，在下一个Pod运行之前，所有前面的Pod必须都是Running和Ready状态）基于\ninit container实现")])]),t._v(" "),e("li",[e("p",[t._v("有序收缩，有序删除")])])]),t._v(" "),e("h3",{attrs:{id:"daemonset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#daemonset"}},[t._v("#")]),t._v(" DaemonSet")]),t._v(" "),e("p",[t._v("DaemonSet确保全部（除了污点）Node上运行一个Pod的副本。当有Node加入集群时，\n也会为他们新增一个Pod。当有Node从集群移除时，这些Pod也会被回收。删除Daemonset将会\n删除它创建的所有Pod")]),t._v(" "),e("p",[t._v("使用DaemonSet的一些典型用法：")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("运行存储集群daemon, 例如在每个Node上运行glusterd、ceph")])]),t._v(" "),e("li",[e("p",[t._v("在每个Node上面运行日志收集daemon, 例如fluentd、logstash")])]),t._v(" "),e("li",[e("p",[t._v("在每个Node上面运行监控daemon, 例如Prometheus Node Exporter")])])]),t._v(" "),e("h3",{attrs:{id:"jobs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jobs"}},[t._v("#")]),t._v(" Jobs")]),t._v(" "),e("p",[t._v("Job负责批处理任务，即仅执行一次的任务，它保证批处理任务的一个或多个Pod成功结束")]),t._v(" "),e("h3",{attrs:{id:"cronjob"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cronjob"}},[t._v("#")]),t._v(" CronJob")]),t._v(" "),e("p",[t._v("Cronjob管理基于时间的Job")])])}),[],!1,null,null,null);a.default=n.exports}}]);