(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{472:function(t,e,a){"use strict";a.r(e);var s=a(54),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),a("h3",{attrs:{id:"介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),a("p",[t._v("Python内置的日志模块")]),t._v(" "),a("h4",{attrs:{id:"日志级别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日志级别"}},[t._v("#")]),t._v(" 日志级别")]),t._v(" "),a("p",[t._v("由高往低")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("critical\nerror\nwarn\ninfo\ndebug\nnotset\n")])])]),a("p",[a("em",[a("code",[t._v("NOTSET")]),t._v("表示所有级别的日志消息都要记录")])]),t._v(" "),a("h4",{attrs:{id:"处理流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#处理流程"}},[t._v("#")]),t._v(" 处理流程")]),t._v(" "),a("p",[a("code",[t._v("logger -> filter -> handler")])]),t._v(" "),a("h2",{attrs:{id:"配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),a("h3",{attrs:{id:"代码显式创建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码显式创建"}},[t._v("#")]),t._v(" 代码显式创建")]),t._v(" "),a("p",[t._v("日志输出到屏幕，写入到文件")]),t._v(" "),a("p",[a("code",[t._v("logger.py")])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" logging\n\n\nlog "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" logging"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getLogger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'logger'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setLevel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("logging"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DEBUG"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nformatter "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" logging"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Formatter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%(message)s'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nhandler_file "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" logging"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FileHandler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test.log'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mode"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'w'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" encoding"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'utf-8'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nhandler_file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setLevel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("logging"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DEBUG"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nhandler_file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setFormatter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("formatter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("addHandler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("handler_file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nhandler_screen "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" logging"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("StreamHandler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nhandler_screen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setLevel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("logging"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("INFO"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nhandler_screen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setFormatter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("formatter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("addHandler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("handler_screen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"通过配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过配置文件"}},[t._v("#")]),t._v(" 通过配置文件")]),t._v(" "),a("p",[t._v("日志输出到屏幕，写入到文件")]),t._v(" "),a("p",[a("code",[t._v("config/logger.conf")])]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("[loggers]\nkeys=root,lcm\n\n[logger_root]\nlevel=DEBUG\nhandlers=file\n\n[logger_lcm]\nlevel=DEBUG\nhandlers=screen,file\nqualname=lcm\npropagate=0\n\n[formatters]\nkeys=simple,complex\n\n[formatter_simple]\nformat=%(asctime)s - %(name)s - %(levelname)s - %(message)s\n\n[formatter_complex]\nformat=%(asctime)s - %(name)s - %(levelname)s - %(module)s : %(lineno)d - %(message)s\n\n[handlers]\nkeys=file,screen\n\n[handler_file]\nclass=handlers.TimedRotatingFileHandler\ninterval=midnight\nbackupCount=5\nformatter=complex\nlevel=DEBUG\nargs=('logs/test.log',)\n\n[handler_screen]\nclass=StreamHandler\nformatter=simple\nlevel=INFO\nargs=(sys.stdout,)\n")])])]),a("p",[a("code",[t._v("logger.py")])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" logging"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config\n\nlogging"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fileConfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"config/logger.conf"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlogger "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" logging"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getLogger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lcm"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"配置项说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置项说明"}},[t._v("#")]),t._v(" 配置项说明")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("配置文件中一定要包含"),a("code",[t._v("loggers")]),t._v("、"),a("code",[t._v("handlers")]),t._v("、"),a("code",[t._v("formatters")]),t._v("这些section，它们通过keys这个option\n来指定该配置文件中已经定义好的"),a("code",[t._v("loggers")]),t._v("、"),a("code",[t._v("handlers")]),t._v("和"),a("code",[t._v("formatters")]),t._v("，多个值之间用逗号分隔。\n另外"),a("code",[t._v("loggers")]),t._v("这个section中的keys一定要包含root这个值")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("loggers")]),t._v("、"),a("code",[t._v("handlers")]),t._v("、"),a("code",[t._v("formatters")]),t._v("中所指定的日志器、处理器和格式器都需要在下面以单独的section进行定义。\nseciton的命名规则为[logger_loggerName]、[formatter_formatterName]、[handler_handlerName]")])]),t._v(" "),a("li",[a("p",[t._v("定义"),a("code",[t._v("logger")]),t._v("的section必须指定"),a("code",[t._v("level")]),t._v("和"),a("code",[t._v("handlers")]),t._v("这两个option，level的可取值为"),a("code",[t._v("NOTSET")]),t._v("、"),a("code",[t._v("DEBUG")]),t._v("、"),a("code",[t._v("INFO")]),t._v("、"),a("code",[t._v("WARNING")]),t._v("、"),a("code",[t._v("ERROR")]),t._v("、"),a("code",[t._v("CRITICAL")]),t._v("，其中"),a("code",[t._v("NOTSET")]),t._v("表示所有级别的日志消息都要记录，包括用户定义级别。"),a("code",[t._v("handlers")]),t._v("的值是以逗号分隔的"),a("code",[t._v("handler")]),t._v("名字列表，这里出现的"),a("code",[t._v("handler")]),t._v("必须出现在[handlers]这个section中，并且相应的"),a("code",[t._v("handler")]),t._v("必须在配置文件中有对应的section定义")])]),t._v(" "),a("li",[a("p",[t._v("对于非root"),a("code",[t._v("logger")]),t._v("来说，除了"),a("code",[t._v("level")]),t._v("和"),a("code",[t._v("handlers")]),t._v("这两个option之外，还需要一些额外的option，其中"),a("code",[t._v("qualname")]),t._v("是必须提供的option，它表示在"),a("code",[t._v("logger")]),t._v("层级中的名字，在应用代码中通过这个名字得到"),a("code",[t._v("logger")]),t._v("。"),a("strong",[a("code",[t._v("propagate")]),t._v("是可选项，其默认是为1，表示消息将会传递给高层次logger的handler，通常我们需要指定其值为0")]),t._v("。另外，对于非root"),a("code",[t._v("logger")]),t._v("的"),a("code",[t._v("level")]),t._v("如果设置为"),a("code",[t._v("NOTSET")]),t._v("，系统将会查找高层次的"),a("code",[t._v("logger")]),t._v("来决定此"),a("code",[t._v("logger")]),t._v("的有效"),a("code",[t._v("level")])])]),t._v(" "),a("li",[a("p",[t._v("定义"),a("code",[t._v("handler")]),t._v("的section中必须指定"),a("code",[t._v("class")]),t._v("和"),a("code",[t._v("args")]),t._v("这两个option，"),a("code",[t._v("level")]),t._v("和"),a("code",[t._v("formatter")]),t._v("为可选option。"),a("code",[t._v("class")]),t._v("表示用于创建"),a("code",[t._v("handler")]),t._v("的类名，"),a("code",[t._v("args")]),t._v("表示传递给"),a("code",[t._v("class")]),t._v("所指定的"),a("code",[t._v("handler")]),t._v("类初始化方法参数，它必须是一个元组（tuple）的形式，即便只有一个参数值也需要是一个元组的形式；"),a("code",[t._v("level")]),t._v("与"),a("code",[t._v("logger")]),t._v("中的"),a("code",[t._v("level")]),t._v("一样，而"),a("code",[t._v("formatter")]),t._v("指定的是该处理器所使用的格式器，这里指定的格式器名称必须出现在"),a("code",[t._v("formatters")]),t._v("这个section中，且在配置文件中必须要有这个"),a("code",[t._v("formatter")]),t._v("的section定义；如果不指定"),a("code",[t._v("formatter")]),t._v("则该"),a("code",[t._v("handler")]),t._v("将会以消息本身作为日志消息进行记录，而不添加额外的时间、日志器名称等信息")])]),t._v(" "),a("li",[a("p",[t._v("定义"),a("code",[t._v("formatter")]),t._v("的sectioin中的option都是可选的，其中包括"),a("code",[t._v("format")]),t._v("用于指定格式字符串，默认为消息字符串本身；datefmt用于指定asctime的时间格式，默认为"),a("code",[t._v("'%Y-%m-%d %H:%M:%S'")]),t._v("。"),a("code",[t._v("class")]),t._v("用于指定格式器类名，默认为"),a("code",[t._v("logging.Formatter")])])])]),t._v(" "),a("h3",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("p",[a("code",[t._v("https://www.cnblogs.com/yyds/p/6885182.html")])])])}),[],!1,null,null,null);e.default=n.exports}}]);