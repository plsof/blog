(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{391:function(s,t,a){s.exports=a.p+"assets/img/flannel.95aae638.png"},427:function(s,t,a){"use strict";a.r(t);var n=a(54),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"网络通信"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#网络通信"}},[s._v("#")]),s._v(" 网络通信")]),s._v(" "),n("h3",{attrs:{id:"容器间通信"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#容器间通信"}},[s._v("#")]),s._v(" 容器间通信")]),s._v(" "),n("p",[s._v("同一个pod内的多个容器通信 --\x3e loopback")]),s._v(" "),n("h3",{attrs:{id:"pod间通信"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pod间通信"}},[s._v("#")]),s._v(" Pod间通信")]),s._v(" "),n("p",[s._v("Pod IP --\x3e Pod IP")]),s._v(" "),n("h3",{attrs:{id:"pod与service通信"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pod与service通信"}},[s._v("#")]),s._v(" Pod与Service通信")]),s._v(" "),n("p",[s._v("Pod IP --\x3e Cluster IP")]),s._v(" "),n("h2",{attrs:{id:"cni"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cni"}},[s._v("#")]),s._v(" CNI")]),s._v(" "),n("h3",{attrs:{id:"flannel"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#flannel"}},[s._v("#")]),s._v(" flannel")]),s._v(" "),n("h4",{attrs:{id:"概述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[s._v("#")]),s._v(" 概述")]),s._v(" "),n("p",[s._v("Flannel是CoreOS团队针对Kubernetes设计的一个网络规划服务，简单来说，它的功能是让集群中的不同节点主机创建的Docker容器都具有全集群唯一的虚拟IP地址。")]),s._v(" "),n("p",[s._v("在默认的Docker配置中，每个节点上的Docker服务会分别负责所在节点容器的IP分配。这样导致的一个问题是，不同节点上容器可能获得相同的内外IP地址。并使这些容器之间能够之间通过IP地址相互找到，也就是相互ping通。")]),s._v(" "),n("p",[s._v("Flannel的设计目的就是为集群中的所有节点重新规划IP地址的使用规则，从而使得不同节点上的容器能够获得“同属一个内网”且”不重复的”IP地址，并让属于不同节点上的容器能够直接通过内网IP通信。")]),s._v(" "),n("p",[s._v("Flannel实质上是一种“覆盖网络(overlaynetwork)”，也就是将TCP数据包装在另一种网络包里面进行路由转发和通信，目前已经支持udp、vxlan、host-gw、aws-vpc、gce和alloc路由等数据转发方式，默认的节点间数据通信方式是vxlan转发。")]),s._v(" "),n("h4",{attrs:{id:"架构原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#架构原理"}},[s._v("#")]),s._v(" 架构原理")]),s._v(" "),n("p",[s._v("架构图")]),s._v(" "),n("img",{attrs:{src:a(391),alt:"Flannel"}}),s._v(" "),n("p",[s._v("组件说明：")]),s._v(" "),n("p",[n("code",[s._v("cni0")]),s._v(": 网桥设备，每创建一个pod都会创建一对veth pair。其中一端是pod中的eth0，另一端是Cni0网桥中的端口（网卡）。Pod中从网卡eth0发出的流量都会发送到Cni0网桥设备的端口（网卡）上。")]),s._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("cni0: "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("flags")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("416")]),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("3")]),s._v("<")]),s._v("UP,BROADCAST,RUNNING,MULTICAST"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  mtu "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1450")]),s._v("\n        inet "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),s._v(".1.1  netmask "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("255.255")]),s._v(".255.0  broadcast "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0\n        ether b2:a9:a5:49:30:d4  txqueuelen "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Ethernet"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        RX packets "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4090887")]),s._v("  bytes "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("414788420")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("395.5")]),s._v(" MiB"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        RX errors "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  dropped "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  overruns "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  frame "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n        TX packets "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4246318")]),s._v("  bytes "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("632932469")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("603.6")]),s._v(" MiB"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        TX errors "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  dropped "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" overruns "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  carrier "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  collisions "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])])]),n("p",[s._v("Cni0设备获得的ip地址是该节点分配到的网段的第一个地址。")]),s._v(" "),n("p",[n("code",[s._v("flannel.1")]),s._v(": overlay网络的设备，用来进行 vxlan 报文的处理（封包和解包）。不同node之间的Pod数据流量都从overlay设备以隧道的形式发送到对端。")]),s._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("flannel.1: "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("flags")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("416")]),n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("3")]),s._v("<")]),s._v("UP,BROADCAST,RUNNING,MULTICAST"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  mtu "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1450")]),s._v("\n        inet "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),s._v(".1.0  netmask "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("255.255")]),s._v(".255.255  broadcast "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0\n        ether fa:76:b6:4b:d0:e4  txqueuelen "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Ethernet"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        RX packets "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("238270")]),s._v("  bytes "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("44552183")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("42.4")]),s._v(" MiB"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        RX errors "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  dropped "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  overruns "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  frame "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n        TX packets "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("122520")]),s._v("  bytes "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20237358")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("19.2")]),s._v(" MiB"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        TX errors "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  dropped "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" overruns "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  carrier "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  collisions "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])])]),n("p",[n("code",[s._v("Flanneld")]),s._v("：flannel在每个主机中运行flanneld作为agent，它会为所在主机从集群的网络地址空间中，获取一个小的网段subnet，本主机内所有容器的IP地址都将从中分配。同时Flanneld监听K8s集群数据库，为flannel.1设备提供封装数据时必要的mac，ip等网络数据信息。")]),s._v(" "),n("h4",{attrs:{id:"同一node的不同pod之间通信"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#同一node的不同pod之间通信"}},[s._v("#")]),s._v(" 同一Node的不同Pod之间通信")]),s._v(" "),n("p",[s._v("通过cni0网卡通信")]),s._v(" "),n("h4",{attrs:{id:"不同node的pod之间通信"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#不同node的pod之间通信"}},[s._v("#")]),s._v(" 不同Node的Pod之间通信")]),s._v(" "),n("ol",[n("li",[s._v("pod中产生数据，根据pod的路由信息，将数据发送到cni0")]),s._v(" "),n("li",[s._v("Cni0根据节点的路由表，将数据发送到隧道设备flannel.1")]),s._v(" "),n("li",[s._v("Flannel.1查看数据包的目的ip，从flanneld获得对端隧道设备的必要信息，封装数据包。")]),s._v(" "),n("li",[s._v("Flannel.1将数据包发送到对端设备。对端节点的网卡接收到数据包，发现数据包为overlay数据包，解开外层封装，并发送内层封装到flannel.1设备。")]),s._v(" "),n("li",[s._v("Flannel.1设备查看数据包，根据路由表匹配，将数据发送给Cni0设备。")]),s._v(" "),n("li",[s._v("cni0匹配路由表，发送数据给网桥上对应的端口。")])]),s._v(" "),n("h4",{attrs:{id:"查看配置信息"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#查看配置信息"}},[s._v("#")]),s._v(" 查看配置信息")]),s._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cat /run/flannel/subnet.env")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("FLANNEL_NETWORK")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),s._v(".0.0/16\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("FLANNEL_SUBNET")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),s._v(".0.1/24\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("FLANNEL_MTU")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1450")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("FLANNEL_IPMASQ")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n")])])]),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl describe cm kube-flannel-cfg -n kube-system")]),s._v("\nName:         kube-flannel-cfg\nNamespace:    kube-system\nLabels:       "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("app")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("flannel\n              "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("tier")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("node\nAnnotations:  kubectl.kubernetes.io/last-applied-configuration:\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"apiVersion"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"v1"')]),s._v(","),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"data"')]),s._v(":"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cni-conf.json"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{'),n("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("name"),n("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v(": "),n("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("cbr0"),n("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v(","),n("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("cniVersion"),n("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v(": "),n("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("0.3.1"),n("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v(","),n("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v("plugins"),n("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v(": ["),n("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("    {"),n("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[s._v('\\"')]),s._v('type\\...\n\nData\n====\ncni-conf.json:\n----\n{\n  "')]),s._v("name"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('": "')]),s._v("cbr0"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('",\n  "')]),s._v("cniVersion"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('": "')]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.3")]),s._v(".1"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('",\n  "')]),s._v("plugins"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('": [\n    {\n      "')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('": "')]),s._v("flannel"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('",\n      "')]),s._v("delegate"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('": {\n        "')]),s._v("hairpinMode"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('": true,\n        "')]),s._v("isDefaultGateway"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('": true\n      }\n    },\n    {\n      "')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('": "')]),s._v("portmap"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('",\n      "')]),s._v("capabilities"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('": {\n        "')]),s._v("portMappings"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('": true\n      }\n    }\n  ]\n}\n\nnet-conf.json:\n----\n{\n  "')]),s._v("Network"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('": "')]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),s._v(".0.0/16"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('",\n  "')]),s._v("Backend"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('": {\n    "')]),s._v("Type"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('": "')]),s._v('vxlan"\n  '),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\nEvents:  "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),n("h4",{attrs:{id:"参考"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[s._v("#")]),s._v(" 参考")]),s._v(" "),n("p",[n("code",[s._v("https://www.cnblogs.com/goldsunshine/p/10740928.html")])]),s._v(" "),n("h3",{attrs:{id:"calico"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#calico"}},[s._v("#")]),s._v(" calico")]),s._v(" "),n("h3",{attrs:{id:"canel"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#canel"}},[s._v("#")]),s._v(" canel")])])}),[],!1,null,null,null);t.default=e.exports}}]);