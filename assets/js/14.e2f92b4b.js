(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{394:function(e,t,r){e.exports=r.p+"assets/img/architecture.2df60b16.png"},429:function(e,t,r){"use strict";r.r(t);var a=r(54),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"架构图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#架构图"}},[e._v("#")]),e._v(" 架构图")]),e._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:r(394),alt:"kubernetes"}}),e._v(" "),a("center",[a("h4",[e._v("Kubernetes架构图")])]),e._v(" "),a("h2",{attrs:{id:"组件-components"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件-components"}},[e._v("#")]),e._v(" 组件 | Components")]),e._v(" "),a("h3",{attrs:{id:"master组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#master组件"}},[e._v("#")]),e._v(" Master组件")]),e._v(" "),a("p",[e._v("Master组件提供的集群控制。Master组件对集群做出全局性决策（例如：调度），以及检测和响应集群事件（副本控制器的replicas字段不满足时,启动新的副本）。")]),e._v(" "),a("h4",{attrs:{id:"kube-apiserver"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kube-apiserver"}},[e._v("#")]),e._v(" kube-apiserver")]),e._v(" "),a("p",[e._v("kube-apiserver对外暴露了Kubernetes API。它是Kubernetes前端控制层。它被设计为水平扩展，即通过部署更多实例来缩放")]),e._v(" "),a("h4",{attrs:{id:"etcd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#etcd"}},[e._v("#")]),e._v(" etcd")]),e._v(" "),a("p",[e._v("etcd用于Kubernetes的后端存储。所有集群数据都存储在此处")]),e._v(" "),a("h4",{attrs:{id:"kube-scheduler"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kube-scheduler"}},[e._v("#")]),e._v(" kube-scheduler")]),e._v(" "),a("p",[e._v("Pod调度器")]),e._v(" "),a("h4",{attrs:{id:"kube-controller-manager"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kube-controller-manager"}},[e._v("#")]),e._v(" kube-controller-manager")]),e._v(" "),a("p",[e._v("运行控制器，它们是处理集群中常规任务的后台线程。逻辑上，每个控制器是一个单独的进程，但为了降低复杂性，它们都被编译成独立的可执行文件，并在单个进程中运行。")]),e._v(" "),a("p",[e._v("这些控制器包括:")]),e._v(" "),a("ul",[a("li",[e._v("Node Controller： 当节点移除时，负责注意和响应。")]),e._v(" "),a("li",[e._v("Replication Controller：负责维护系统中每个副本控制器对象正确数量的 Pod。")]),e._v(" "),a("li",[e._v("Endpoints Controller：填充端点（Endpoints）对象（即连接 Services & Pods）。")]),e._v(" "),a("li",[e._v("Service Account & Token Controllers：为新的命名空间创建默认帐户和 API 访问令牌。")])]),e._v(" "),a("h3",{attrs:{id:"node组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node组件"}},[e._v("#")]),e._v(" Node组件")]),e._v(" "),a("p",[e._v("运行在每个node上面，维护运行的pod和提供k8s运行环境")]),e._v(" "),a("h4",{attrs:{id:"kubelet"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kubelet"}},[e._v("#")]),e._v(" kubelet")]),e._v(" "),a("p",[e._v("kubelet是主要的节点代理,它监测已分配给其节点的Pod（通过apiserver或通过本地配置文件）提供如下功能:")]),e._v(" "),a("ul",[a("li",[e._v("挂载Pod所需要的数据卷（Volume）。")]),e._v(" "),a("li",[e._v("下载Pod的secrets。")]),e._v(" "),a("li",[e._v("通过Docker运行（或通过rkt）Pod的容器。")]),e._v(" "),a("li",[e._v("周期性的对容器生命周期进行探测。")]),e._v(" "),a("li",[e._v("如果需要，通过创建镜像Pod（Mirror Pod）将Pod的状态报告回系统的其余部分。")]),e._v(" "),a("li",[e._v("将节点的状态报告回系统的其余部分。")])]),e._v(" "),a("h4",{attrs:{id:"kube-proxy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kube-proxy"}},[e._v("#")]),e._v(" kube-proxy")]),e._v(" "),a("p",[e._v("网络转发代理，维护node节点的网络规则")]),e._v(" "),a("h4",{attrs:{id:"container-runtime"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#container-runtime"}},[e._v("#")]),e._v(" Container Runtime")]),e._v(" "),a("p",[e._v("docker 。。。")]),e._v(" "),a("h3",{attrs:{id:"addons-插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#addons-插件"}},[e._v("#")]),e._v(" Addons（插件）")]),e._v(" "),a("p",[e._v("插件是实现集群功能的Pod和Service。Pods可以通过Deployments，ReplicationControllers管理。插件对象本身是受命名空间限制的，被创建于kube-system 命名空间。")]),e._v(" "),a("h4",{attrs:{id:"dns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dns"}},[e._v("#")]),e._v(" DNS")]),e._v(" "),a("p",[e._v("为k8s服务提供DNS记录。")]),e._v(" "),a("h4",{attrs:{id:"dashboard"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dashboard"}},[e._v("#")]),e._v(" Dashboard")]),e._v(" "),a("p",[e._v("k8s仪表盘")]),e._v(" "),a("h4",{attrs:{id:"container-resource-monitoring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#container-resource-monitoring"}},[e._v("#")]),e._v(" Container Resource Monitoring")]),e._v(" "),a("p",[e._v("容器监控")]),e._v(" "),a("h4",{attrs:{id:"cluster-level-logging"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cluster-level-logging"}},[e._v("#")]),e._v(" Cluster-level Logging")]),e._v(" "),a("p",[e._v("日志")])],1)}),[],!1,null,null,null);t.default=s.exports}}]);